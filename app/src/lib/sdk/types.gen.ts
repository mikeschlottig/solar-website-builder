// This file is auto-generated by @hey-api/openapi-ts

export type BodyComponentServiceCreateCustomComponent = {
    name: string;
    code: string;
    description?: string | null;
    category: string;
    styles?: string | null;
    props_schema?: {
        [key: string]: unknown;
    } | null;
};

export type BodyComponentServiceDeleteComponent = {
    component_id: string;
};

export type BodyComponentServiceGetComponent = {
    component_id: string;
};

export type BodyComponentServiceGetPublicComponents = {
    category?: string | null;
};

export type BodyComponentServiceGetUserComponents = {
    category?: string | null;
};

export type BodyComponentServiceUpdateComponent = {
    component_id: string;
    name?: string | null;
    description?: string | null;
    code?: string | null;
    styles?: string | null;
    props_schema?: {
        [key: string]: unknown;
    } | null;
    is_public?: boolean | null;
};

export type BodyComponentServiceValidateComponentCode = {
    code: string;
};

export type BodyMediaServiceDeleteMediaAsset = {
    asset_id: string;
};

export type BodyMediaServiceGetMediaAsset = {
    asset_id: string;
};

export type BodyMediaServiceGetUserMedia = {
    website_id?: string | null;
    folder?: string | null;
    mime_type_filter?: string | null;
};

export type BodyMediaServiceOrganizeMedia = {
    asset_ids: Array<string>;
    target_folder?: string | null;
};

export type BodyMediaServiceUpdateMediaMetadata = {
    asset_id: string;
    name?: string | null;
    alt_text?: string | null;
    tags?: Array<string> | null;
    folder?: string | null;
};

export type BodyPageServiceCreatePage = {
    website_id: string;
    title: string;
    slug: string;
    meta_description?: string | null;
};

export type BodyPageServiceDeletePage = {
    page_id: string;
};

export type BodyPageServiceGetPage = {
    page_id: string;
};

export type BodyPageServiceGetWebsitePages = {
    website_id: string;
};

export type BodyPageServicePublishPage = {
    page_id: string;
};

export type BodyPageServiceReorderPages = {
    website_id: string;
    page_orders: Array<{
        [key: string]: unknown;
    }>;
};

export type BodyPageServiceUpdatePageContent = {
    page_id: string;
    content_structure: {
        [key: string]: unknown;
    };
};

export type BodyPageServiceUpdatePageMetadata = {
    page_id: string;
    title?: string | null;
    slug?: string | null;
    meta_description?: string | null;
    meta_keywords?: string | null;
};

export type BodyPageServiceUpdatePageStyles = {
    page_id: string;
    styles: {
        [key: string]: unknown;
    };
};

export type BodyWebsiteServiceCreateWebsite = {
    name: string;
    description?: string | null;
};

export type BodyWebsiteServiceDeleteWebsite = {
    website_id: string;
};

export type BodyWebsiteServiceGetWebsite = {
    website_id: string;
};

export type BodyWebsiteServicePublishWebsite = {
    website_id: string;
};

export type BodyWebsiteServiceUpdateWebsite = {
    website_id: string;
    name?: string | null;
    description?: string | null;
    domain?: string | null;
    theme_config?: {
        [key: string]: unknown;
    } | null;
    seo_config?: {
        [key: string]: unknown;
    } | null;
};

export type BodyComponentServiceUploadComponentPreview = {
    component_id: string;
    preview_image: Blob | File;
};

export type BodyMediaServiceUploadMedia = {
    alt_text?: string | null;
    file: Blob | File;
    folder?: string | null;
    name: string;
    tags?: Array<string> | null;
    website_id?: string | null;
};

export type BodyWebsiteServiceUploadFavicon = {
    favicon: Blob | File;
    website_id: string;
};

export type Component = {
    id?: string;
    user_id: string;
    name: string;
    description?: string | null;
    category: string;
    component_type: string;
    code?: string | null;
    styles?: string | null;
    props_schema?: {
        [key: string]: unknown;
    };
    preview_image_path?: string | null;
    is_public?: boolean;
    version?: string;
    created_at?: string;
    updated_at?: string;
};

export type HttpValidationError = {
    detail?: Array<ValidationError>;
};

export type MediaAsset = {
    id?: string;
    user_id: string;
    website_id?: string | null;
    name: string;
    original_filename: string;
    file_path: string;
    file_size: number;
    mime_type: string;
    alt_text?: string | null;
    tags?: Array<string>;
    folder?: string | null;
    created_at?: string;
    updated_at?: string;
};

export type Page = {
    id?: string;
    website_id: string;
    title: string;
    slug: string;
    meta_description?: string | null;
    meta_keywords?: string | null;
    content_structure?: {
        [key: string]: unknown;
    };
    styles?: {
        [key: string]: unknown;
    };
    is_home_page?: boolean;
    is_published?: boolean;
    sort_order?: number;
    created_at?: string;
    updated_at?: string;
};

export type ValidationError = {
    loc: Array<string | number>;
    msg: string;
    type: string;
};

export type Website = {
    id?: string;
    user_id: string;
    name: string;
    description?: string | null;
    domain?: string | null;
    favicon_path?: string | null;
    theme_config?: {
        [key: string]: unknown;
    };
    seo_config?: {
        [key: string]: unknown;
    };
    is_published?: boolean;
    created_at?: string;
    updated_at?: string;
};

export type WebsiteServiceCreateWebsiteData = {
    body: BodyWebsiteServiceCreateWebsite;
    path?: never;
    query?: never;
    url: '/api/website_service/create_website';
};

export type WebsiteServiceCreateWebsiteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type WebsiteServiceCreateWebsiteError = WebsiteServiceCreateWebsiteErrors[keyof WebsiteServiceCreateWebsiteErrors];

export type WebsiteServiceCreateWebsiteResponses = {
    /**
     * Successful Response
     */
    200: Website;
};

export type WebsiteServiceCreateWebsiteResponse = WebsiteServiceCreateWebsiteResponses[keyof WebsiteServiceCreateWebsiteResponses];

export type WebsiteServiceGetUserWebsitesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/website_service/get_user_websites';
};

export type WebsiteServiceGetUserWebsitesResponses = {
    /**
     * Successful Response
     */
    200: Array<Website>;
};

export type WebsiteServiceGetUserWebsitesResponse = WebsiteServiceGetUserWebsitesResponses[keyof WebsiteServiceGetUserWebsitesResponses];

export type WebsiteServiceGetWebsiteData = {
    body: BodyWebsiteServiceGetWebsite;
    path?: never;
    query?: never;
    url: '/api/website_service/get_website';
};

export type WebsiteServiceGetWebsiteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type WebsiteServiceGetWebsiteError = WebsiteServiceGetWebsiteErrors[keyof WebsiteServiceGetWebsiteErrors];

export type WebsiteServiceGetWebsiteResponses = {
    /**
     * Successful Response
     */
    200: Website;
};

export type WebsiteServiceGetWebsiteResponse = WebsiteServiceGetWebsiteResponses[keyof WebsiteServiceGetWebsiteResponses];

export type WebsiteServiceUpdateWebsiteData = {
    body: BodyWebsiteServiceUpdateWebsite;
    path?: never;
    query?: never;
    url: '/api/website_service/update_website';
};

export type WebsiteServiceUpdateWebsiteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type WebsiteServiceUpdateWebsiteError = WebsiteServiceUpdateWebsiteErrors[keyof WebsiteServiceUpdateWebsiteErrors];

export type WebsiteServiceUpdateWebsiteResponses = {
    /**
     * Successful Response
     */
    200: Website;
};

export type WebsiteServiceUpdateWebsiteResponse = WebsiteServiceUpdateWebsiteResponses[keyof WebsiteServiceUpdateWebsiteResponses];

export type WebsiteServiceUploadFaviconData = {
    body: BodyWebsiteServiceUploadFavicon;
    path?: never;
    query?: never;
    url: '/api/website_service/upload_favicon';
};

export type WebsiteServiceUploadFaviconErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type WebsiteServiceUploadFaviconError = WebsiteServiceUploadFaviconErrors[keyof WebsiteServiceUploadFaviconErrors];

export type WebsiteServiceUploadFaviconResponses = {
    /**
     * Successful Response
     */
    200: Website;
};

export type WebsiteServiceUploadFaviconResponse = WebsiteServiceUploadFaviconResponses[keyof WebsiteServiceUploadFaviconResponses];

export type WebsiteServiceDeleteWebsiteData = {
    body: BodyWebsiteServiceDeleteWebsite;
    path?: never;
    query?: never;
    url: '/api/website_service/delete_website';
};

export type WebsiteServiceDeleteWebsiteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type WebsiteServiceDeleteWebsiteError = WebsiteServiceDeleteWebsiteErrors[keyof WebsiteServiceDeleteWebsiteErrors];

export type WebsiteServiceDeleteWebsiteResponses = {
    /**
     * Successful Response
     */
    200: boolean;
};

export type WebsiteServiceDeleteWebsiteResponse = WebsiteServiceDeleteWebsiteResponses[keyof WebsiteServiceDeleteWebsiteResponses];

export type WebsiteServicePublishWebsiteData = {
    body: BodyWebsiteServicePublishWebsite;
    path?: never;
    query?: never;
    url: '/api/website_service/publish_website';
};

export type WebsiteServicePublishWebsiteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type WebsiteServicePublishWebsiteError = WebsiteServicePublishWebsiteErrors[keyof WebsiteServicePublishWebsiteErrors];

export type WebsiteServicePublishWebsiteResponses = {
    /**
     * Successful Response
     */
    200: Website;
};

export type WebsiteServicePublishWebsiteResponse = WebsiteServicePublishWebsiteResponses[keyof WebsiteServicePublishWebsiteResponses];

export type ComponentServiceCreateCustomComponentData = {
    body: BodyComponentServiceCreateCustomComponent;
    path?: never;
    query?: never;
    url: '/api/component_service/create_custom_component';
};

export type ComponentServiceCreateCustomComponentErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ComponentServiceCreateCustomComponentError = ComponentServiceCreateCustomComponentErrors[keyof ComponentServiceCreateCustomComponentErrors];

export type ComponentServiceCreateCustomComponentResponses = {
    /**
     * Successful Response
     */
    200: Component;
};

export type ComponentServiceCreateCustomComponentResponse = ComponentServiceCreateCustomComponentResponses[keyof ComponentServiceCreateCustomComponentResponses];

export type ComponentServiceGetUserComponentsData = {
    body: BodyComponentServiceGetUserComponents;
    path?: never;
    query?: never;
    url: '/api/component_service/get_user_components';
};

export type ComponentServiceGetUserComponentsErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ComponentServiceGetUserComponentsError = ComponentServiceGetUserComponentsErrors[keyof ComponentServiceGetUserComponentsErrors];

export type ComponentServiceGetUserComponentsResponses = {
    /**
     * Successful Response
     */
    200: Array<Component>;
};

export type ComponentServiceGetUserComponentsResponse = ComponentServiceGetUserComponentsResponses[keyof ComponentServiceGetUserComponentsResponses];

export type ComponentServiceGetBuiltInComponentsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/component_service/get_built_in_components';
};

export type ComponentServiceGetBuiltInComponentsResponses = {
    /**
     * Successful Response
     */
    200: Array<Component>;
};

export type ComponentServiceGetBuiltInComponentsResponse = ComponentServiceGetBuiltInComponentsResponses[keyof ComponentServiceGetBuiltInComponentsResponses];

export type ComponentServiceGetPublicComponentsData = {
    body: BodyComponentServiceGetPublicComponents;
    path?: never;
    query?: never;
    url: '/api/component_service/get_public_components';
};

export type ComponentServiceGetPublicComponentsErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ComponentServiceGetPublicComponentsError = ComponentServiceGetPublicComponentsErrors[keyof ComponentServiceGetPublicComponentsErrors];

export type ComponentServiceGetPublicComponentsResponses = {
    /**
     * Successful Response
     */
    200: Array<Component>;
};

export type ComponentServiceGetPublicComponentsResponse = ComponentServiceGetPublicComponentsResponses[keyof ComponentServiceGetPublicComponentsResponses];

export type ComponentServiceGetComponentData = {
    body: BodyComponentServiceGetComponent;
    path?: never;
    query?: never;
    url: '/api/component_service/get_component';
};

export type ComponentServiceGetComponentErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ComponentServiceGetComponentError = ComponentServiceGetComponentErrors[keyof ComponentServiceGetComponentErrors];

export type ComponentServiceGetComponentResponses = {
    /**
     * Successful Response
     */
    200: Component;
};

export type ComponentServiceGetComponentResponse = ComponentServiceGetComponentResponses[keyof ComponentServiceGetComponentResponses];

export type ComponentServiceUpdateComponentData = {
    body: BodyComponentServiceUpdateComponent;
    path?: never;
    query?: never;
    url: '/api/component_service/update_component';
};

export type ComponentServiceUpdateComponentErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ComponentServiceUpdateComponentError = ComponentServiceUpdateComponentErrors[keyof ComponentServiceUpdateComponentErrors];

export type ComponentServiceUpdateComponentResponses = {
    /**
     * Successful Response
     */
    200: Component;
};

export type ComponentServiceUpdateComponentResponse = ComponentServiceUpdateComponentResponses[keyof ComponentServiceUpdateComponentResponses];

export type ComponentServiceUploadComponentPreviewData = {
    body: BodyComponentServiceUploadComponentPreview;
    path?: never;
    query?: never;
    url: '/api/component_service/upload_component_preview';
};

export type ComponentServiceUploadComponentPreviewErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ComponentServiceUploadComponentPreviewError = ComponentServiceUploadComponentPreviewErrors[keyof ComponentServiceUploadComponentPreviewErrors];

export type ComponentServiceUploadComponentPreviewResponses = {
    /**
     * Successful Response
     */
    200: Component;
};

export type ComponentServiceUploadComponentPreviewResponse = ComponentServiceUploadComponentPreviewResponses[keyof ComponentServiceUploadComponentPreviewResponses];

export type ComponentServiceDeleteComponentData = {
    body: BodyComponentServiceDeleteComponent;
    path?: never;
    query?: never;
    url: '/api/component_service/delete_component';
};

export type ComponentServiceDeleteComponentErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ComponentServiceDeleteComponentError = ComponentServiceDeleteComponentErrors[keyof ComponentServiceDeleteComponentErrors];

export type ComponentServiceDeleteComponentResponses = {
    /**
     * Successful Response
     */
    200: boolean;
};

export type ComponentServiceDeleteComponentResponse = ComponentServiceDeleteComponentResponses[keyof ComponentServiceDeleteComponentResponses];

export type ComponentServiceValidateComponentCodeData = {
    body: BodyComponentServiceValidateComponentCode;
    path?: never;
    query?: never;
    url: '/api/component_service/validate_component_code';
};

export type ComponentServiceValidateComponentCodeErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ComponentServiceValidateComponentCodeError = ComponentServiceValidateComponentCodeErrors[keyof ComponentServiceValidateComponentCodeErrors];

export type ComponentServiceValidateComponentCodeResponses = {
    /**
     * Successful Response
     */
    200: {
        [key: string]: unknown;
    };
};

export type ComponentServiceValidateComponentCodeResponse = ComponentServiceValidateComponentCodeResponses[keyof ComponentServiceValidateComponentCodeResponses];

export type MediaServiceUploadMediaData = {
    body: BodyMediaServiceUploadMedia;
    path?: never;
    query?: never;
    url: '/api/media_service/upload_media';
};

export type MediaServiceUploadMediaErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type MediaServiceUploadMediaError = MediaServiceUploadMediaErrors[keyof MediaServiceUploadMediaErrors];

export type MediaServiceUploadMediaResponses = {
    /**
     * Successful Response
     */
    200: MediaAsset;
};

export type MediaServiceUploadMediaResponse = MediaServiceUploadMediaResponses[keyof MediaServiceUploadMediaResponses];

export type MediaServiceGetUserMediaData = {
    body: BodyMediaServiceGetUserMedia;
    path?: never;
    query?: never;
    url: '/api/media_service/get_user_media';
};

export type MediaServiceGetUserMediaErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type MediaServiceGetUserMediaError = MediaServiceGetUserMediaErrors[keyof MediaServiceGetUserMediaErrors];

export type MediaServiceGetUserMediaResponses = {
    /**
     * Successful Response
     */
    200: Array<MediaAsset>;
};

export type MediaServiceGetUserMediaResponse = MediaServiceGetUserMediaResponses[keyof MediaServiceGetUserMediaResponses];

export type MediaServiceGetMediaAssetData = {
    body: BodyMediaServiceGetMediaAsset;
    path?: never;
    query?: never;
    url: '/api/media_service/get_media_asset';
};

export type MediaServiceGetMediaAssetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type MediaServiceGetMediaAssetError = MediaServiceGetMediaAssetErrors[keyof MediaServiceGetMediaAssetErrors];

export type MediaServiceGetMediaAssetResponses = {
    /**
     * Successful Response
     */
    200: MediaAsset;
};

export type MediaServiceGetMediaAssetResponse = MediaServiceGetMediaAssetResponses[keyof MediaServiceGetMediaAssetResponses];

export type MediaServiceUpdateMediaMetadataData = {
    body: BodyMediaServiceUpdateMediaMetadata;
    path?: never;
    query?: never;
    url: '/api/media_service/update_media_metadata';
};

export type MediaServiceUpdateMediaMetadataErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type MediaServiceUpdateMediaMetadataError = MediaServiceUpdateMediaMetadataErrors[keyof MediaServiceUpdateMediaMetadataErrors];

export type MediaServiceUpdateMediaMetadataResponses = {
    /**
     * Successful Response
     */
    200: MediaAsset;
};

export type MediaServiceUpdateMediaMetadataResponse = MediaServiceUpdateMediaMetadataResponses[keyof MediaServiceUpdateMediaMetadataResponses];

export type MediaServiceDeleteMediaAssetData = {
    body: BodyMediaServiceDeleteMediaAsset;
    path?: never;
    query?: never;
    url: '/api/media_service/delete_media_asset';
};

export type MediaServiceDeleteMediaAssetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type MediaServiceDeleteMediaAssetError = MediaServiceDeleteMediaAssetErrors[keyof MediaServiceDeleteMediaAssetErrors];

export type MediaServiceDeleteMediaAssetResponses = {
    /**
     * Successful Response
     */
    200: boolean;
};

export type MediaServiceDeleteMediaAssetResponse = MediaServiceDeleteMediaAssetResponses[keyof MediaServiceDeleteMediaAssetResponses];

export type MediaServiceOrganizeMediaData = {
    body: BodyMediaServiceOrganizeMedia;
    path?: never;
    query?: never;
    url: '/api/media_service/organize_media';
};

export type MediaServiceOrganizeMediaErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type MediaServiceOrganizeMediaError = MediaServiceOrganizeMediaErrors[keyof MediaServiceOrganizeMediaErrors];

export type MediaServiceOrganizeMediaResponses = {
    /**
     * Successful Response
     */
    200: Array<MediaAsset>;
};

export type MediaServiceOrganizeMediaResponse = MediaServiceOrganizeMediaResponses[keyof MediaServiceOrganizeMediaResponses];

export type PageServiceCreatePageData = {
    body: BodyPageServiceCreatePage;
    path?: never;
    query?: never;
    url: '/api/page_service/create_page';
};

export type PageServiceCreatePageErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PageServiceCreatePageError = PageServiceCreatePageErrors[keyof PageServiceCreatePageErrors];

export type PageServiceCreatePageResponses = {
    /**
     * Successful Response
     */
    200: Page;
};

export type PageServiceCreatePageResponse = PageServiceCreatePageResponses[keyof PageServiceCreatePageResponses];

export type PageServiceGetWebsitePagesData = {
    body: BodyPageServiceGetWebsitePages;
    path?: never;
    query?: never;
    url: '/api/page_service/get_website_pages';
};

export type PageServiceGetWebsitePagesErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PageServiceGetWebsitePagesError = PageServiceGetWebsitePagesErrors[keyof PageServiceGetWebsitePagesErrors];

export type PageServiceGetWebsitePagesResponses = {
    /**
     * Successful Response
     */
    200: Array<Page>;
};

export type PageServiceGetWebsitePagesResponse = PageServiceGetWebsitePagesResponses[keyof PageServiceGetWebsitePagesResponses];

export type PageServiceGetPageData = {
    body: BodyPageServiceGetPage;
    path?: never;
    query?: never;
    url: '/api/page_service/get_page';
};

export type PageServiceGetPageErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PageServiceGetPageError = PageServiceGetPageErrors[keyof PageServiceGetPageErrors];

export type PageServiceGetPageResponses = {
    /**
     * Successful Response
     */
    200: Page;
};

export type PageServiceGetPageResponse = PageServiceGetPageResponses[keyof PageServiceGetPageResponses];

export type PageServiceUpdatePageContentData = {
    body: BodyPageServiceUpdatePageContent;
    path?: never;
    query?: never;
    url: '/api/page_service/update_page_content';
};

export type PageServiceUpdatePageContentErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PageServiceUpdatePageContentError = PageServiceUpdatePageContentErrors[keyof PageServiceUpdatePageContentErrors];

export type PageServiceUpdatePageContentResponses = {
    /**
     * Successful Response
     */
    200: Page;
};

export type PageServiceUpdatePageContentResponse = PageServiceUpdatePageContentResponses[keyof PageServiceUpdatePageContentResponses];

export type PageServiceUpdatePageMetadataData = {
    body: BodyPageServiceUpdatePageMetadata;
    path?: never;
    query?: never;
    url: '/api/page_service/update_page_metadata';
};

export type PageServiceUpdatePageMetadataErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PageServiceUpdatePageMetadataError = PageServiceUpdatePageMetadataErrors[keyof PageServiceUpdatePageMetadataErrors];

export type PageServiceUpdatePageMetadataResponses = {
    /**
     * Successful Response
     */
    200: Page;
};

export type PageServiceUpdatePageMetadataResponse = PageServiceUpdatePageMetadataResponses[keyof PageServiceUpdatePageMetadataResponses];

export type PageServiceUpdatePageStylesData = {
    body: BodyPageServiceUpdatePageStyles;
    path?: never;
    query?: never;
    url: '/api/page_service/update_page_styles';
};

export type PageServiceUpdatePageStylesErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PageServiceUpdatePageStylesError = PageServiceUpdatePageStylesErrors[keyof PageServiceUpdatePageStylesErrors];

export type PageServiceUpdatePageStylesResponses = {
    /**
     * Successful Response
     */
    200: Page;
};

export type PageServiceUpdatePageStylesResponse = PageServiceUpdatePageStylesResponses[keyof PageServiceUpdatePageStylesResponses];

export type PageServicePublishPageData = {
    body: BodyPageServicePublishPage;
    path?: never;
    query?: never;
    url: '/api/page_service/publish_page';
};

export type PageServicePublishPageErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PageServicePublishPageError = PageServicePublishPageErrors[keyof PageServicePublishPageErrors];

export type PageServicePublishPageResponses = {
    /**
     * Successful Response
     */
    200: Page;
};

export type PageServicePublishPageResponse = PageServicePublishPageResponses[keyof PageServicePublishPageResponses];

export type PageServiceDeletePageData = {
    body: BodyPageServiceDeletePage;
    path?: never;
    query?: never;
    url: '/api/page_service/delete_page';
};

export type PageServiceDeletePageErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PageServiceDeletePageError = PageServiceDeletePageErrors[keyof PageServiceDeletePageErrors];

export type PageServiceDeletePageResponses = {
    /**
     * Successful Response
     */
    200: boolean;
};

export type PageServiceDeletePageResponse = PageServiceDeletePageResponses[keyof PageServiceDeletePageResponses];

export type PageServiceReorderPagesData = {
    body: BodyPageServiceReorderPages;
    path?: never;
    query?: never;
    url: '/api/page_service/reorder_pages';
};

export type PageServiceReorderPagesErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PageServiceReorderPagesError = PageServiceReorderPagesErrors[keyof PageServiceReorderPagesErrors];

export type PageServiceReorderPagesResponses = {
    /**
     * Successful Response
     */
    200: Array<Page>;
};

export type PageServiceReorderPagesResponse = PageServiceReorderPagesResponses[keyof PageServiceReorderPagesResponses];
